// <auto-generated />
using System;
using Arcana.DataAccess.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Arcana.DataAccess.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240515075827_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Arcana.Domain.Entities.Commons.Asset", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long>("CreatedByUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("DeletedByUserId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Path")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("UpdatedByUserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Assets");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 970, DateTimeKind.Utc).AddTicks(9879),
                            CreatedByUserId = 0L,
                            IsDeleted = false,
                            Name = "Picture",
                            Path = "https://www.google.com/url?sa=i&url=https%3A%2F%2Fwww.vecteezy.com%2Ffree-photos%2Fpicture&psig=AOvVaw3XaUHI9Jhqr2Yekc8F0A7X&ust=1715337265006000&source=images&cd=vfe&opi=89978449&ved=0CBIQjRxqFwoTCNjGn7WvgIYDFQAAAAAdAAAAABAE"
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 970, DateTimeKind.Utc).AddTicks(9881),
                            CreatedByUserId = 0L,
                            IsDeleted = false,
                            Name = "Picture2",
                            Path = "https://www.google.com/url?sa=i&url=https%3A%2F%2Fwww.vecteezy.com%2Ffree-photos%2Fpicture&psig=AOvVaw3XaUHI9Jhqr2Yekc8F0A7X&ust=1715337265006000&source=images&cd=vfe&opi=89978449&ved=0CBIQjRxqFwoTCNjGn7WvgIYDFQAAAAAdAAAAABAE"
                        });
                });

            modelBuilder.Entity("Arcana.Domain.Entities.CourseCategories.CourseCategory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long>("CreatedByUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("DeletedByUserId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("UpdatedByUserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("CourseCategories");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 971, DateTimeKind.Utc).AddTicks(181),
                            CreatedByUserId = 0L,
                            IsDeleted = false,
                            Name = "IT"
                        });
                });

            modelBuilder.Entity("Arcana.Domain.Entities.CourseComments.CourseComment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Content")
                        .HasColumnType("text");

                    b.Property<long>("CourseId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long>("CreatedByUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("DeletedByUserId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<long>("StudentId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("UpdatedByUserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("StudentId");

                    b.ToTable("CourseComments");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Content = "Course Comment",
                            CourseId = 1L,
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 971, DateTimeKind.Utc).AddTicks(3470),
                            CreatedByUserId = 0L,
                            IsDeleted = false,
                            StudentId = 1L
                        });
                });

            modelBuilder.Entity("Arcana.Domain.Entities.Courses.Course", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("CategoryId")
                        .HasColumnType("bigint");

                    b.Property<int>("CountOfLessons")
                        .HasColumnType("integer");

                    b.Property<long?>("CourseCategoryId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long>("CreatedByUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("DeletedByUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<int>("Duration")
                        .HasColumnType("integer");

                    b.Property<long?>("FileId")
                        .HasColumnType("bigint");

                    b.Property<long>("InstructorId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<long>("LanguageId")
                        .HasColumnType("bigint");

                    b.Property<int>("Level")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,3)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("UpdatedByUserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("CourseCategoryId");

                    b.HasIndex("FileId");

                    b.HasIndex("InstructorId");

                    b.HasIndex("LanguageId");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CategoryId = 1L,
                            CountOfLessons = 150,
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 972, DateTimeKind.Utc).AddTicks(7289),
                            CreatedByUserId = 0L,
                            Description = "Course Description",
                            Duration = 7,
                            FileId = 1L,
                            InstructorId = 1L,
                            IsDeleted = false,
                            LanguageId = 1L,
                            Level = 2,
                            Name = ".NET",
                            Price = 2200000.00m
                        });
                });

            modelBuilder.Entity("Arcana.Domain.Entities.Courses.CourseModule", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("CourseId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long>("CreatedByUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("DeletedByUserId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("UpdatedByUserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.ToTable("CourseModules");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CourseId = 1L,
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 972, DateTimeKind.Utc).AddTicks(8600),
                            CreatedByUserId = 0L,
                            IsDeleted = false,
                            Name = "Module1"
                        });
                });

            modelBuilder.Entity("Arcana.Domain.Entities.Courses.CourseStars", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("CourseId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long>("CreatedByUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("DeletedByUserId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<byte>("Stars")
                        .HasColumnType("smallint");

                    b.Property<long>("StudentId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("UpdatedByUserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("StudentId");

                    b.ToTable("CourseStars");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CourseId = 1L,
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 973, DateTimeKind.Utc).AddTicks(899),
                            CreatedByUserId = 0L,
                            IsDeleted = false,
                            Stars = (byte)5,
                            StudentId = 1L
                        });
                });

            modelBuilder.Entity("Arcana.Domain.Entities.Instructors.Instructor", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("About")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long>("CreatedByUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("DeletedByUserId")
                        .HasColumnType("bigint");

                    b.Property<long>("DetailId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<long?>("PictureId")
                        .HasColumnType("bigint");

                    b.Property<string>("Profession")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("UpdatedByUserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("DetailId");

                    b.HasIndex("PictureId");

                    b.ToTable("Instructors");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            About = "Description",
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 973, DateTimeKind.Utc).AddTicks(5816),
                            CreatedByUserId = 0L,
                            DetailId = 3L,
                            IsDeleted = false,
                            PictureId = 2L,
                            Profession = "Software Developer"
                        });
                });

            modelBuilder.Entity("Arcana.Domain.Entities.Instructors.InstructorComment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Content")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long>("CreatedByUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("DeletedByUserId")
                        .HasColumnType("bigint");

                    b.Property<long>("InstructorId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<long>("StudentId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("UpdatedByUserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("InstructorId");

                    b.HasIndex("StudentId");

                    b.ToTable("InstructorComments");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 973, DateTimeKind.Utc).AddTicks(3597),
                            CreatedByUserId = 0L,
                            InstructorId = 1L,
                            IsDeleted = false,
                            StudentId = 1L
                        });
                });

            modelBuilder.Entity("Arcana.Domain.Entities.Instructors.InstructorStar", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long>("CreatedByUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("DeletedByUserId")
                        .HasColumnType("bigint");

                    b.Property<long>("InstructorId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<byte>("Stars")
                        .HasColumnType("smallint");

                    b.Property<long>("StudentId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("UpdatedByUserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("InstructorId");

                    b.HasIndex("StudentId");

                    b.ToTable("InstructorStars");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 973, DateTimeKind.Utc).AddTicks(8128),
                            CreatedByUserId = 0L,
                            InstructorId = 1L,
                            IsDeleted = false,
                            Stars = (byte)5,
                            StudentId = 1L
                        });
                });

            modelBuilder.Entity("Arcana.Domain.Entities.Languages.Language", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long>("CreatedByUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("DeletedByUserId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("ShortName")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("UpdatedByUserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Languages");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 973, DateTimeKind.Utc).AddTicks(8310),
                            CreatedByUserId = 0L,
                            IsDeleted = false,
                            Name = "English",
                            ShortName = "EN"
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 973, DateTimeKind.Utc).AddTicks(8311),
                            CreatedByUserId = 0L,
                            IsDeleted = false,
                            Name = "Spanish",
                            ShortName = "ES"
                        });
                });

            modelBuilder.Entity("Arcana.Domain.Entities.Lessons.Lesson", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long>("CreatedByUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("DeletedByUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<long?>("FileId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<long>("ModuleId")
                        .HasColumnType("bigint");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("UpdatedByUserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("FileId");

                    b.HasIndex("ModuleId");

                    b.ToTable("Lessons");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 974, DateTimeKind.Utc).AddTicks(4203),
                            CreatedByUserId = 0L,
                            Description = "Lesson Description",
                            FileId = 2L,
                            IsDeleted = false,
                            ModuleId = 1L,
                            Title = "Lesson1"
                        });
                });

            modelBuilder.Entity("Arcana.Domain.Entities.Lessons.LessonComment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Content")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long>("CreatedByUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("DeletedByUserId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<long>("LessonId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ParentId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("UpdatedByUserId")
                        .HasColumnType("bigint");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("LessonId");

                    b.HasIndex("ParentId");

                    b.HasIndex("UserId");

                    b.ToTable("LessonComments");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Content = "Lesson Comment",
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 974, DateTimeKind.Utc).AddTicks(2013),
                            CreatedByUserId = 0L,
                            IsDeleted = false,
                            LessonId = 1L,
                            UserId = 2L
                        });
                });

            modelBuilder.Entity("Arcana.Domain.Entities.QuestionAnswers.QuestionAnswer", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long>("CreatedByUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("DeletedByUserId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<long>("OptionId")
                        .HasColumnType("bigint");

                    b.Property<long>("QuestionId")
                        .HasColumnType("bigint");

                    b.Property<long>("QuizId")
                        .HasColumnType("bigint");

                    b.Property<long>("StudentId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("UpdatedByUserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("OptionId");

                    b.HasIndex("QuestionId");

                    b.HasIndex("QuizId");

                    b.HasIndex("StudentId");

                    b.ToTable("QuestionAnswers");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 974, DateTimeKind.Utc).AddTicks(7560),
                            CreatedByUserId = 0L,
                            IsDeleted = false,
                            OptionId = 1L,
                            QuestionId = 1L,
                            QuizId = 1L,
                            StudentId = 1L
                        });
                });

            modelBuilder.Entity("Arcana.Domain.Entities.QuestionOptions.QuestionOption", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Content")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long>("CreatedByUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("DeletedByUserId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsCorrect")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<long>("QuestionId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("UpdatedByUserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("QuestionId");

                    b.ToTable("QuestionOptions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Content = "asd",
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 975, DateTimeKind.Utc).AddTicks(918),
                            CreatedByUserId = 0L,
                            IsCorrect = true,
                            IsDeleted = false,
                            QuestionId = 1L
                        },
                        new
                        {
                            Id = 2L,
                            Content = "dsd",
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 975, DateTimeKind.Utc).AddTicks(921),
                            CreatedByUserId = 0L,
                            IsCorrect = false,
                            IsDeleted = false,
                            QuestionId = 1L
                        },
                        new
                        {
                            Id = 3L,
                            Content = "bdb",
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 975, DateTimeKind.Utc).AddTicks(922),
                            CreatedByUserId = 0L,
                            IsCorrect = false,
                            IsDeleted = false,
                            QuestionId = 1L
                        },
                        new
                        {
                            Id = 4L,
                            Content = "waw",
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 975, DateTimeKind.Utc).AddTicks(923),
                            CreatedByUserId = 0L,
                            IsCorrect = false,
                            IsDeleted = false,
                            QuestionId = 1L
                        });
                });

            modelBuilder.Entity("Arcana.Domain.Entities.Questions.Question", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Content")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long>("CreatedByUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("DeletedByUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("FileId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<long>("ModuleId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("UpdatedByUserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("FileId");

                    b.HasIndex("ModuleId");

                    b.ToTable("Questions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Content = "Content",
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 974, DateTimeKind.Utc).AddTicks(9735),
                            CreatedByUserId = 0L,
                            FileId = 2L,
                            IsDeleted = false,
                            ModuleId = 1L
                        });
                });

            modelBuilder.Entity("Arcana.Domain.Entities.QuizApplications.QuizApplication", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long>("CreatedByUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("DeletedByUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<long>("QuizId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long>("StudentId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("UpdatedByUserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("QuizId");

                    b.HasIndex("StudentId");

                    b.ToTable("QuizApplications");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 975, DateTimeKind.Utc).AddTicks(3245),
                            CreatedByUserId = 0L,
                            EndTime = new DateTime(2024, 11, 8, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            QuizId = 1L,
                            StartTime = new DateTime(2024, 10, 8, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            StudentId = 1L
                        });
                });

            modelBuilder.Entity("Arcana.Domain.Entities.QuizQuestions.QuizQuestion", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long>("CreatedByUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("DeletedByUserId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<long>("QuestionId")
                        .HasColumnType("bigint");

                    b.Property<long>("QuizId")
                        .HasColumnType("bigint");

                    b.Property<long?>("QuizId1")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("UpdatedByUserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("QuestionId");

                    b.HasIndex("QuizId");

                    b.HasIndex("QuizId1");

                    b.ToTable("QuizQuestions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 976, DateTimeKind.Utc).AddTicks(3730),
                            CreatedByUserId = 0L,
                            IsDeleted = false,
                            QuestionId = 1L,
                            QuizId = 1L
                        });
                });

            modelBuilder.Entity("Arcana.Domain.Entities.Quizzes.Quiz", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long>("CreatedByUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("DeletedByUserId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<long>("ModuleId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("QuestionCount")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("UpdatedByUserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ModuleId");

                    b.ToTable("Quizzes");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 975, DateTimeKind.Utc).AddTicks(4359),
                            CreatedByUserId = 0L,
                            IsDeleted = false,
                            ModuleId = 1L,
                            Name = "Quiz1",
                            QuestionCount = 5
                        });
                });

            modelBuilder.Entity("Arcana.Domain.Entities.StudentCourses.StudentCourse", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("CourseId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long>("CreatedByUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("DeletedByUserId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<long>("StudentId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("UpdatedByUserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("StudentId");

                    b.ToTable("StudentCourses");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CourseId = 1L,
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 977, DateTimeKind.Utc).AddTicks(444),
                            CreatedByUserId = 0L,
                            IsDeleted = false,
                            StudentId = 1L
                        });
                });

            modelBuilder.Entity("Arcana.Domain.Entities.Students.Student", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long>("CreatedByUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("DeletedByUserId")
                        .HasColumnType("bigint");

                    b.Property<long>("DetailId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<long?>("PictureId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("UpdatedByUserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("DetailId");

                    b.HasIndex("PictureId");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 976, DateTimeKind.Utc).AddTicks(8220),
                            CreatedByUserId = 0L,
                            DetailId = 2L,
                            IsDeleted = false,
                            PictureId = 1L
                        });
                });

            modelBuilder.Entity("Arcana.Domain.Entities.Users.Permission", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Action")
                        .HasColumnType("text");

                    b.Property<string>("Controller")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long>("CreatedByUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("DeletedByUserId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("UpdatedByUserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Permissions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Action = "PostAsync",
                            Controller = "Students",
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 974, DateTimeKind.Utc).AddTicks(4384),
                            CreatedByUserId = 0L,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 2L,
                            Action = "PutAsync",
                            Controller = "Students",
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 974, DateTimeKind.Utc).AddTicks(4385),
                            CreatedByUserId = 0L,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 3L,
                            Action = "DeleteAsync",
                            Controller = "Students",
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 974, DateTimeKind.Utc).AddTicks(4386),
                            CreatedByUserId = 0L,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 4L,
                            Action = "GetAllAsync",
                            Controller = "Students",
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 974, DateTimeKind.Utc).AddTicks(4388),
                            CreatedByUserId = 0L,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 5L,
                            Action = "GetAsync",
                            Controller = "Students",
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 974, DateTimeKind.Utc).AddTicks(4389),
                            CreatedByUserId = 0L,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 6L,
                            Action = "UploadPictureAsync",
                            Controller = "Students",
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 974, DateTimeKind.Utc).AddTicks(4390),
                            CreatedByUserId = 0L,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 7L,
                            Action = "DeletePictureAsync",
                            Controller = "Students",
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 974, DateTimeKind.Utc).AddTicks(4391),
                            CreatedByUserId = 0L,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 8L,
                            Action = "PostAsync",
                            Controller = "Instructors",
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 974, DateTimeKind.Utc).AddTicks(4392),
                            CreatedByUserId = 0L,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 9L,
                            Action = "PutAsync",
                            Controller = "Instructors",
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 974, DateTimeKind.Utc).AddTicks(4393),
                            CreatedByUserId = 0L,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 10L,
                            Action = "DeleteAsync",
                            Controller = "Instructors",
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 974, DateTimeKind.Utc).AddTicks(4394),
                            CreatedByUserId = 0L,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 11L,
                            Action = "GetAllAsync",
                            Controller = "Instructors",
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 974, DateTimeKind.Utc).AddTicks(4395),
                            CreatedByUserId = 0L,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 12L,
                            Action = "GetAsync",
                            Controller = "Instructors",
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 974, DateTimeKind.Utc).AddTicks(4396),
                            CreatedByUserId = 0L,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 13L,
                            Action = "UploadPictureAsync",
                            Controller = "Instructors",
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 974, DateTimeKind.Utc).AddTicks(4397),
                            CreatedByUserId = 0L,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 14L,
                            Action = "DeletePictureAsync",
                            Controller = "Instructors",
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 974, DateTimeKind.Utc).AddTicks(4398),
                            CreatedByUserId = 0L,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 15L,
                            Action = "PostAsync",
                            Controller = "Users",
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 974, DateTimeKind.Utc).AddTicks(4400),
                            CreatedByUserId = 0L,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 16L,
                            Action = "PutAsync",
                            Controller = "Users",
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 974, DateTimeKind.Utc).AddTicks(4401),
                            CreatedByUserId = 0L,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 17L,
                            Action = "DeleteAsync",
                            Controller = "Users",
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 974, DateTimeKind.Utc).AddTicks(4402),
                            CreatedByUserId = 0L,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 18L,
                            Action = "GetAllAsync",
                            Controller = "Users",
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 974, DateTimeKind.Utc).AddTicks(4403),
                            CreatedByUserId = 0L,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 19L,
                            Action = "GetAsync",
                            Controller = "Users",
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 974, DateTimeKind.Utc).AddTicks(4404),
                            CreatedByUserId = 0L,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 20L,
                            Action = "ChangePasswordAsync",
                            Controller = "Users",
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 974, DateTimeKind.Utc).AddTicks(4405),
                            CreatedByUserId = 0L,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 21L,
                            Action = "PostAsync",
                            Controller = "Lessons",
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 974, DateTimeKind.Utc).AddTicks(4406),
                            CreatedByUserId = 0L,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 22L,
                            Action = "PutAsync",
                            Controller = "Lessons",
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 974, DateTimeKind.Utc).AddTicks(4407),
                            CreatedByUserId = 0L,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 23L,
                            Action = "DeleteAsync",
                            Controller = "Lessons",
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 974, DateTimeKind.Utc).AddTicks(4408),
                            CreatedByUserId = 0L,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 24L,
                            Action = "GetAllAsync",
                            Controller = "Lessons",
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 974, DateTimeKind.Utc).AddTicks(4409),
                            CreatedByUserId = 0L,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 25L,
                            Action = "GetAsync",
                            Controller = "Lessons",
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 974, DateTimeKind.Utc).AddTicks(4410),
                            CreatedByUserId = 0L,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 26L,
                            Action = "UploadPictureAsync",
                            Controller = "Lessons",
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 974, DateTimeKind.Utc).AddTicks(4411),
                            CreatedByUserId = 0L,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 27L,
                            Action = "DeletePictureAsync",
                            Controller = "Lessons",
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 974, DateTimeKind.Utc).AddTicks(4412),
                            CreatedByUserId = 0L,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 28L,
                            Action = "PostAsync",
                            Controller = "Courses",
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 974, DateTimeKind.Utc).AddTicks(4414),
                            CreatedByUserId = 0L,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 29L,
                            Action = "PutAsync",
                            Controller = "Courses",
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 974, DateTimeKind.Utc).AddTicks(4415),
                            CreatedByUserId = 0L,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 30L,
                            Action = "DeleteAsync",
                            Controller = "Courses",
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 974, DateTimeKind.Utc).AddTicks(4416),
                            CreatedByUserId = 0L,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 31L,
                            Action = "GetAllAsync",
                            Controller = "Courses",
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 974, DateTimeKind.Utc).AddTicks(4417),
                            CreatedByUserId = 0L,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 32L,
                            Action = "GetAsync",
                            Controller = "Courses",
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 974, DateTimeKind.Utc).AddTicks(4418),
                            CreatedByUserId = 0L,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 33L,
                            Action = "PostAsync",
                            Controller = "UserRoles",
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 974, DateTimeKind.Utc).AddTicks(4419),
                            CreatedByUserId = 0L,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 34L,
                            Action = "PutAsync",
                            Controller = "UserRoles",
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 974, DateTimeKind.Utc).AddTicks(4420),
                            CreatedByUserId = 0L,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 35L,
                            Action = "DeleteAsync",
                            Controller = "UserRoles",
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 974, DateTimeKind.Utc).AddTicks(4421),
                            CreatedByUserId = 0L,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 36L,
                            Action = "GetAllAsync",
                            Controller = "UserRoles",
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 974, DateTimeKind.Utc).AddTicks(4422),
                            CreatedByUserId = 0L,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 37L,
                            Action = "GetAsync",
                            Controller = "UserRoles",
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 974, DateTimeKind.Utc).AddTicks(4423),
                            CreatedByUserId = 0L,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 38L,
                            Action = "PostAsync",
                            Controller = "Permissions",
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 974, DateTimeKind.Utc).AddTicks(4424),
                            CreatedByUserId = 0L,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 39L,
                            Action = "PutAsync",
                            Controller = "Permissions",
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 974, DateTimeKind.Utc).AddTicks(4425),
                            CreatedByUserId = 0L,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 40L,
                            Action = "DeleteAsync",
                            Controller = "Permissions",
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 974, DateTimeKind.Utc).AddTicks(4466),
                            CreatedByUserId = 0L,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 41L,
                            Action = "GetAllAsync",
                            Controller = "Permissions",
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 974, DateTimeKind.Utc).AddTicks(4467),
                            CreatedByUserId = 0L,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 42L,
                            Action = "GetAsync",
                            Controller = "Permissions",
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 974, DateTimeKind.Utc).AddTicks(4468),
                            CreatedByUserId = 0L,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 43L,
                            Action = "PostAsync",
                            Controller = "StudentCourses",
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 974, DateTimeKind.Utc).AddTicks(4469),
                            CreatedByUserId = 0L,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 44L,
                            Action = "PutAsync",
                            Controller = "StudentCourses",
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 974, DateTimeKind.Utc).AddTicks(4471),
                            CreatedByUserId = 0L,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 45L,
                            Action = "DeleteAsync",
                            Controller = "StudentCourses",
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 974, DateTimeKind.Utc).AddTicks(4472),
                            CreatedByUserId = 0L,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 46L,
                            Action = "GetAllAsync",
                            Controller = "StudentCourses",
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 974, DateTimeKind.Utc).AddTicks(4473),
                            CreatedByUserId = 0L,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 47L,
                            Action = "GetAsync",
                            Controller = "StudentCourses",
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 974, DateTimeKind.Utc).AddTicks(4474),
                            CreatedByUserId = 0L,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 48L,
                            Action = "PostAsync",
                            Controller = "Quizzes",
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 974, DateTimeKind.Utc).AddTicks(4475),
                            CreatedByUserId = 0L,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 49L,
                            Action = "PutAsync",
                            Controller = "Quizzes",
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 974, DateTimeKind.Utc).AddTicks(4476),
                            CreatedByUserId = 0L,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 50L,
                            Action = "DeleteAsync",
                            Controller = "Quizzes",
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 974, DateTimeKind.Utc).AddTicks(4478),
                            CreatedByUserId = 0L,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 51L,
                            Action = "GetAllAsync",
                            Controller = "Quizzes",
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 974, DateTimeKind.Utc).AddTicks(4479),
                            CreatedByUserId = 0L,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 52L,
                            Action = "GetAsync",
                            Controller = "Quizzes",
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 974, DateTimeKind.Utc).AddTicks(4480),
                            CreatedByUserId = 0L,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 53L,
                            Action = "GenerateQuestionsAsync",
                            Controller = "Quizzes",
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 974, DateTimeKind.Utc).AddTicks(4481),
                            CreatedByUserId = 0L,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 54L,
                            Action = "PostAsync",
                            Controller = "QuizQuestions",
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 974, DateTimeKind.Utc).AddTicks(4482),
                            CreatedByUserId = 0L,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 55L,
                            Action = "PutAsync",
                            Controller = "QuizQuestions",
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 974, DateTimeKind.Utc).AddTicks(4483),
                            CreatedByUserId = 0L,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 56L,
                            Action = "DeleteAsync",
                            Controller = "QuizQuestions",
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 974, DateTimeKind.Utc).AddTicks(4484),
                            CreatedByUserId = 0L,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 57L,
                            Action = "GetAllAsync",
                            Controller = "QuizQuestions",
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 974, DateTimeKind.Utc).AddTicks(4485),
                            CreatedByUserId = 0L,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 58L,
                            Action = "GetAsync",
                            Controller = "QuizQuestions",
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 974, DateTimeKind.Utc).AddTicks(4486),
                            CreatedByUserId = 0L,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 59L,
                            Action = "PostAsync",
                            Controller = "QuizApplications",
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 974, DateTimeKind.Utc).AddTicks(4487),
                            CreatedByUserId = 0L,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 60L,
                            Action = "PutAsync",
                            Controller = "QuizApplications",
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 974, DateTimeKind.Utc).AddTicks(4488),
                            CreatedByUserId = 0L,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 61L,
                            Action = "DeleteAsync",
                            Controller = "QuizApplications",
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 974, DateTimeKind.Utc).AddTicks(4490),
                            CreatedByUserId = 0L,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 62L,
                            Action = "GetAllAsync",
                            Controller = "QuizApplications",
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 974, DateTimeKind.Utc).AddTicks(4491),
                            CreatedByUserId = 0L,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 63L,
                            Action = "GetAsync",
                            Controller = "QuizApplications",
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 974, DateTimeKind.Utc).AddTicks(4492),
                            CreatedByUserId = 0L,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 64L,
                            Action = "PostAsync",
                            Controller = "Questions",
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 974, DateTimeKind.Utc).AddTicks(4493),
                            CreatedByUserId = 0L,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 65L,
                            Action = "PutAsync",
                            Controller = "Questions",
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 974, DateTimeKind.Utc).AddTicks(4494),
                            CreatedByUserId = 0L,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 66L,
                            Action = "DeleteAsync",
                            Controller = "Questions",
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 974, DateTimeKind.Utc).AddTicks(4495),
                            CreatedByUserId = 0L,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 67L,
                            Action = "GetAllAsync",
                            Controller = "Questions",
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 974, DateTimeKind.Utc).AddTicks(4496),
                            CreatedByUserId = 0L,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 68L,
                            Action = "GetAsync",
                            Controller = "Questions",
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 974, DateTimeKind.Utc).AddTicks(4497),
                            CreatedByUserId = 0L,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 69L,
                            Action = "UploadPictureAsync",
                            Controller = "Questions",
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 974, DateTimeKind.Utc).AddTicks(4498),
                            CreatedByUserId = 0L,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 70L,
                            Action = "DeletePictureAsync",
                            Controller = "Questions",
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 974, DateTimeKind.Utc).AddTicks(4499),
                            CreatedByUserId = 0L,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 71L,
                            Action = "PostAsync",
                            Controller = "UserRoles",
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 974, DateTimeKind.Utc).AddTicks(4500),
                            CreatedByUserId = 0L,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 72L,
                            Action = "PutAsync",
                            Controller = "UserRoles",
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 974, DateTimeKind.Utc).AddTicks(4501),
                            CreatedByUserId = 0L,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 73L,
                            Action = "DeleteAsync",
                            Controller = "UserRoles",
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 974, DateTimeKind.Utc).AddTicks(4502),
                            CreatedByUserId = 0L,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 74L,
                            Action = "GetAllAsync",
                            Controller = "UserRoles",
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 974, DateTimeKind.Utc).AddTicks(4503),
                            CreatedByUserId = 0L,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 75L,
                            Action = "GetAsync",
                            Controller = "UserRoles",
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 974, DateTimeKind.Utc).AddTicks(4504),
                            CreatedByUserId = 0L,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 76L,
                            Action = "PostAsync",
                            Controller = "QuestionOptions",
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 974, DateTimeKind.Utc).AddTicks(4505),
                            CreatedByUserId = 0L,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 77L,
                            Action = "PutAsync",
                            Controller = "QuestionOptions",
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 974, DateTimeKind.Utc).AddTicks(4506),
                            CreatedByUserId = 0L,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 78L,
                            Action = "DeleteAsync",
                            Controller = "QuestionOptions",
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 974, DateTimeKind.Utc).AddTicks(4507),
                            CreatedByUserId = 0L,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 79L,
                            Action = "GetAllAsync",
                            Controller = "QuestionOptions",
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 974, DateTimeKind.Utc).AddTicks(4508),
                            CreatedByUserId = 0L,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 80L,
                            Action = "GetAsync",
                            Controller = "QuestionOptions",
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 974, DateTimeKind.Utc).AddTicks(4509),
                            CreatedByUserId = 0L,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 81L,
                            Action = "PostAsync",
                            Controller = "QuestionAnswers",
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 974, DateTimeKind.Utc).AddTicks(4511),
                            CreatedByUserId = 0L,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 82L,
                            Action = "PutAsync",
                            Controller = "QuestionAnswers",
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 974, DateTimeKind.Utc).AddTicks(4512),
                            CreatedByUserId = 0L,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 83L,
                            Action = "DeleteAsync",
                            Controller = "QuestionAnswers",
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 974, DateTimeKind.Utc).AddTicks(4513),
                            CreatedByUserId = 0L,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 84L,
                            Action = "GetAllAsync",
                            Controller = "QuestionAnswers",
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 974, DateTimeKind.Utc).AddTicks(4514),
                            CreatedByUserId = 0L,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 86L,
                            Action = "PostAsync",
                            Controller = "LessonComments",
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 974, DateTimeKind.Utc).AddTicks(4515),
                            CreatedByUserId = 0L,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 87L,
                            Action = "PutAsync",
                            Controller = "LessonComments",
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 974, DateTimeKind.Utc).AddTicks(4516),
                            CreatedByUserId = 0L,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 88L,
                            Action = "DeleteAsync",
                            Controller = "LessonComments",
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 974, DateTimeKind.Utc).AddTicks(4517),
                            CreatedByUserId = 0L,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 89L,
                            Action = "GetAllAsync",
                            Controller = "LessonComments",
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 974, DateTimeKind.Utc).AddTicks(4518),
                            CreatedByUserId = 0L,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 90L,
                            Action = "GetAsync",
                            Controller = "LessonComments",
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 974, DateTimeKind.Utc).AddTicks(4519),
                            CreatedByUserId = 0L,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 91L,
                            Action = "PostAsync",
                            Controller = "Languages",
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 974, DateTimeKind.Utc).AddTicks(4520),
                            CreatedByUserId = 0L,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 92L,
                            Action = "PutAsync",
                            Controller = "Languages",
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 974, DateTimeKind.Utc).AddTicks(4521),
                            CreatedByUserId = 0L,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 93L,
                            Action = "DeleteAsync",
                            Controller = "Languages",
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 974, DateTimeKind.Utc).AddTicks(4522),
                            CreatedByUserId = 0L,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 94L,
                            Action = "GetAllAsync",
                            Controller = "Languages",
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 974, DateTimeKind.Utc).AddTicks(4523),
                            CreatedByUserId = 0L,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 95L,
                            Action = "GetAsync",
                            Controller = "Languages",
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 974, DateTimeKind.Utc).AddTicks(4524),
                            CreatedByUserId = 0L,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 96L,
                            Action = "PostAsync",
                            Controller = "InstructorStars",
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 974, DateTimeKind.Utc).AddTicks(4526),
                            CreatedByUserId = 0L,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 97L,
                            Action = "PutAsync",
                            Controller = "InstructorStars",
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 974, DateTimeKind.Utc).AddTicks(4527),
                            CreatedByUserId = 0L,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 98L,
                            Action = "DeleteAsync",
                            Controller = "InstructorStars",
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 974, DateTimeKind.Utc).AddTicks(4528),
                            CreatedByUserId = 0L,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 99L,
                            Action = "GetAllAsync",
                            Controller = "InstructorStars",
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 974, DateTimeKind.Utc).AddTicks(4529),
                            CreatedByUserId = 0L,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 100L,
                            Action = "GetAsync",
                            Controller = "InstructorStars",
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 974, DateTimeKind.Utc).AddTicks(4530),
                            CreatedByUserId = 0L,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 101L,
                            Action = "PostAsync",
                            Controller = "InstructorComments",
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 974, DateTimeKind.Utc).AddTicks(4531),
                            CreatedByUserId = 0L,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 102L,
                            Action = "PutAsync",
                            Controller = "InstructorComments",
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 974, DateTimeKind.Utc).AddTicks(4532),
                            CreatedByUserId = 0L,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 103L,
                            Action = "DeleteAsync",
                            Controller = "InstructorComments",
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 974, DateTimeKind.Utc).AddTicks(4533),
                            CreatedByUserId = 0L,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 104L,
                            Action = "GetAllAsync",
                            Controller = "InstructorComments",
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 974, DateTimeKind.Utc).AddTicks(4534),
                            CreatedByUserId = 0L,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 105L,
                            Action = "GetAsync",
                            Controller = "InstructorComments",
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 974, DateTimeKind.Utc).AddTicks(4570),
                            CreatedByUserId = 0L,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 106L,
                            Action = "PostAsync",
                            Controller = "RolePermissions",
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 974, DateTimeKind.Utc).AddTicks(4571),
                            CreatedByUserId = 0L,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 107L,
                            Action = "PutAsync",
                            Controller = "RolePermissions",
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 974, DateTimeKind.Utc).AddTicks(4572),
                            CreatedByUserId = 0L,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 108L,
                            Action = "DeleteAsync",
                            Controller = "RolePermissions",
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 974, DateTimeKind.Utc).AddTicks(4574),
                            CreatedByUserId = 0L,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 109L,
                            Action = "GetAllAsync",
                            Controller = "RolePermissions",
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 974, DateTimeKind.Utc).AddTicks(4575),
                            CreatedByUserId = 0L,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 110L,
                            Action = "GetAsync",
                            Controller = "RolePermissions",
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 974, DateTimeKind.Utc).AddTicks(4576),
                            CreatedByUserId = 0L,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 111L,
                            Action = "PostAsync",
                            Controller = "CourseModules",
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 974, DateTimeKind.Utc).AddTicks(4577),
                            CreatedByUserId = 0L,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 112L,
                            Action = "PutAsync",
                            Controller = "CourseModules",
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 974, DateTimeKind.Utc).AddTicks(4578),
                            CreatedByUserId = 0L,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 113L,
                            Action = "DeleteAsync",
                            Controller = "CourseModules",
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 974, DateTimeKind.Utc).AddTicks(4579),
                            CreatedByUserId = 0L,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 114L,
                            Action = "GetAllAsync",
                            Controller = "CourseModules",
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 974, DateTimeKind.Utc).AddTicks(4580),
                            CreatedByUserId = 0L,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 115L,
                            Action = "GetAsync",
                            Controller = "CourseModules",
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 974, DateTimeKind.Utc).AddTicks(4581),
                            CreatedByUserId = 0L,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 116L,
                            Action = "PostAsync",
                            Controller = "CourseStars",
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 974, DateTimeKind.Utc).AddTicks(4582),
                            CreatedByUserId = 0L,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 117L,
                            Action = "PutAsync",
                            Controller = "CourseStars",
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 974, DateTimeKind.Utc).AddTicks(4583),
                            CreatedByUserId = 0L,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 118L,
                            Action = "DeleteAsync",
                            Controller = "CourseStars",
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 974, DateTimeKind.Utc).AddTicks(4584),
                            CreatedByUserId = 0L,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 119L,
                            Action = "GetAllAsync",
                            Controller = "CourseStars",
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 974, DateTimeKind.Utc).AddTicks(4585),
                            CreatedByUserId = 0L,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 120L,
                            Action = "GetAsync",
                            Controller = "CourseStars",
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 974, DateTimeKind.Utc).AddTicks(4586),
                            CreatedByUserId = 0L,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 121L,
                            Action = "PostAsync",
                            Controller = "CourseComments",
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 974, DateTimeKind.Utc).AddTicks(4587),
                            CreatedByUserId = 0L,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 122L,
                            Action = "PutAsync",
                            Controller = "CourseComments",
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 974, DateTimeKind.Utc).AddTicks(4588),
                            CreatedByUserId = 0L,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 123L,
                            Action = "DeleteAsync",
                            Controller = "CourseComments",
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 974, DateTimeKind.Utc).AddTicks(4589),
                            CreatedByUserId = 0L,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 124L,
                            Action = "GetAllAsync",
                            Controller = "CourseComments",
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 974, DateTimeKind.Utc).AddTicks(4590),
                            CreatedByUserId = 0L,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 125L,
                            Action = "GetAsync",
                            Controller = "CourseComments",
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 974, DateTimeKind.Utc).AddTicks(4591),
                            CreatedByUserId = 0L,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 126L,
                            Action = "PostAsync",
                            Controller = "CourseCategories",
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 974, DateTimeKind.Utc).AddTicks(4592),
                            CreatedByUserId = 0L,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 127L,
                            Action = "PutAsync",
                            Controller = "CourseCategories",
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 974, DateTimeKind.Utc).AddTicks(4593),
                            CreatedByUserId = 0L,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 128L,
                            Action = "DeleteAsync",
                            Controller = "CourseCategories",
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 974, DateTimeKind.Utc).AddTicks(4594),
                            CreatedByUserId = 0L,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 129L,
                            Action = "GetAllAsync",
                            Controller = "CourseCategories",
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 974, DateTimeKind.Utc).AddTicks(4595),
                            CreatedByUserId = 0L,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 130L,
                            Action = "GetAsync",
                            Controller = "CourseCategories",
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 974, DateTimeKind.Utc).AddTicks(4596),
                            CreatedByUserId = 0L,
                            IsDeleted = false
                        });
                });

            modelBuilder.Entity("Arcana.Domain.Entities.Users.RolePermission", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long>("CreatedByUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("DeletedByUserId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<long>("PermissionId")
                        .HasColumnType("bigint");

                    b.Property<long>("RoleId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("UpdatedByUserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("PermissionId");

                    b.HasIndex("RoleId");

                    b.ToTable("RolePermissions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 976, DateTimeKind.Utc).AddTicks(5888),
                            CreatedByUserId = 0L,
                            IsDeleted = false,
                            PermissionId = 1L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 976, DateTimeKind.Utc).AddTicks(5890),
                            CreatedByUserId = 0L,
                            IsDeleted = false,
                            PermissionId = 2L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 3L,
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 976, DateTimeKind.Utc).AddTicks(5891),
                            CreatedByUserId = 0L,
                            IsDeleted = false,
                            PermissionId = 3L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 4L,
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 976, DateTimeKind.Utc).AddTicks(5892),
                            CreatedByUserId = 0L,
                            IsDeleted = false,
                            PermissionId = 4L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 5L,
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 976, DateTimeKind.Utc).AddTicks(5893),
                            CreatedByUserId = 0L,
                            IsDeleted = false,
                            PermissionId = 5L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 6L,
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 976, DateTimeKind.Utc).AddTicks(5894),
                            CreatedByUserId = 0L,
                            IsDeleted = false,
                            PermissionId = 6L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 7L,
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 976, DateTimeKind.Utc).AddTicks(5895),
                            CreatedByUserId = 0L,
                            IsDeleted = false,
                            PermissionId = 7L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 8L,
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 976, DateTimeKind.Utc).AddTicks(5896),
                            CreatedByUserId = 0L,
                            IsDeleted = false,
                            PermissionId = 8L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 9L,
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 976, DateTimeKind.Utc).AddTicks(5897),
                            CreatedByUserId = 0L,
                            IsDeleted = false,
                            PermissionId = 9L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 10L,
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 976, DateTimeKind.Utc).AddTicks(5899),
                            CreatedByUserId = 0L,
                            IsDeleted = false,
                            PermissionId = 10L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 11L,
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 976, DateTimeKind.Utc).AddTicks(5900),
                            CreatedByUserId = 0L,
                            IsDeleted = false,
                            PermissionId = 11L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 12L,
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 976, DateTimeKind.Utc).AddTicks(5901),
                            CreatedByUserId = 0L,
                            IsDeleted = false,
                            PermissionId = 12L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 13L,
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 976, DateTimeKind.Utc).AddTicks(5902),
                            CreatedByUserId = 0L,
                            IsDeleted = false,
                            PermissionId = 13L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 14L,
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 976, DateTimeKind.Utc).AddTicks(5903),
                            CreatedByUserId = 0L,
                            IsDeleted = false,
                            PermissionId = 14L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 15L,
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 976, DateTimeKind.Utc).AddTicks(5904),
                            CreatedByUserId = 0L,
                            IsDeleted = false,
                            PermissionId = 15L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 16L,
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 976, DateTimeKind.Utc).AddTicks(5905),
                            CreatedByUserId = 0L,
                            IsDeleted = false,
                            PermissionId = 16L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 17L,
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 976, DateTimeKind.Utc).AddTicks(5906),
                            CreatedByUserId = 0L,
                            IsDeleted = false,
                            PermissionId = 17L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 18L,
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 976, DateTimeKind.Utc).AddTicks(5907),
                            CreatedByUserId = 0L,
                            IsDeleted = false,
                            PermissionId = 18L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 19L,
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 976, DateTimeKind.Utc).AddTicks(5908),
                            CreatedByUserId = 0L,
                            IsDeleted = false,
                            PermissionId = 19L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 20L,
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 976, DateTimeKind.Utc).AddTicks(5909),
                            CreatedByUserId = 0L,
                            IsDeleted = false,
                            PermissionId = 20L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 21L,
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 976, DateTimeKind.Utc).AddTicks(5910),
                            CreatedByUserId = 0L,
                            IsDeleted = false,
                            PermissionId = 21L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 22L,
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 976, DateTimeKind.Utc).AddTicks(5911),
                            CreatedByUserId = 0L,
                            IsDeleted = false,
                            PermissionId = 22L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 23L,
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 976, DateTimeKind.Utc).AddTicks(5912),
                            CreatedByUserId = 0L,
                            IsDeleted = false,
                            PermissionId = 23L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 24L,
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 976, DateTimeKind.Utc).AddTicks(5913),
                            CreatedByUserId = 0L,
                            IsDeleted = false,
                            PermissionId = 24L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 25L,
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 976, DateTimeKind.Utc).AddTicks(5914),
                            CreatedByUserId = 0L,
                            IsDeleted = false,
                            PermissionId = 25L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 26L,
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 976, DateTimeKind.Utc).AddTicks(5915),
                            CreatedByUserId = 0L,
                            IsDeleted = false,
                            PermissionId = 26L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 27L,
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 976, DateTimeKind.Utc).AddTicks(5916),
                            CreatedByUserId = 0L,
                            IsDeleted = false,
                            PermissionId = 27L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 28L,
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 976, DateTimeKind.Utc).AddTicks(5917),
                            CreatedByUserId = 0L,
                            IsDeleted = false,
                            PermissionId = 28L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 29L,
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 976, DateTimeKind.Utc).AddTicks(5918),
                            CreatedByUserId = 0L,
                            IsDeleted = false,
                            PermissionId = 29L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 30L,
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 976, DateTimeKind.Utc).AddTicks(5919),
                            CreatedByUserId = 0L,
                            IsDeleted = false,
                            PermissionId = 30L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 31L,
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 976, DateTimeKind.Utc).AddTicks(5920),
                            CreatedByUserId = 0L,
                            IsDeleted = false,
                            PermissionId = 31L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 32L,
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 976, DateTimeKind.Utc).AddTicks(5921),
                            CreatedByUserId = 0L,
                            IsDeleted = false,
                            PermissionId = 32L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 33L,
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 976, DateTimeKind.Utc).AddTicks(5922),
                            CreatedByUserId = 0L,
                            IsDeleted = false,
                            PermissionId = 33L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 34L,
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 976, DateTimeKind.Utc).AddTicks(5923),
                            CreatedByUserId = 0L,
                            IsDeleted = false,
                            PermissionId = 34L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 35L,
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 976, DateTimeKind.Utc).AddTicks(5924),
                            CreatedByUserId = 0L,
                            IsDeleted = false,
                            PermissionId = 35L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 36L,
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 976, DateTimeKind.Utc).AddTicks(5925),
                            CreatedByUserId = 0L,
                            IsDeleted = false,
                            PermissionId = 36L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 37L,
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 976, DateTimeKind.Utc).AddTicks(5927),
                            CreatedByUserId = 0L,
                            IsDeleted = false,
                            PermissionId = 37L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 38L,
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 976, DateTimeKind.Utc).AddTicks(5928),
                            CreatedByUserId = 0L,
                            IsDeleted = false,
                            PermissionId = 38L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 39L,
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 976, DateTimeKind.Utc).AddTicks(5929),
                            CreatedByUserId = 0L,
                            IsDeleted = false,
                            PermissionId = 39L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 40L,
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 976, DateTimeKind.Utc).AddTicks(5930),
                            CreatedByUserId = 0L,
                            IsDeleted = false,
                            PermissionId = 40L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 41L,
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 976, DateTimeKind.Utc).AddTicks(5931),
                            CreatedByUserId = 0L,
                            IsDeleted = false,
                            PermissionId = 41L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 42L,
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 976, DateTimeKind.Utc).AddTicks(5932),
                            CreatedByUserId = 0L,
                            IsDeleted = false,
                            PermissionId = 42L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 43L,
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 976, DateTimeKind.Utc).AddTicks(5933),
                            CreatedByUserId = 0L,
                            IsDeleted = false,
                            PermissionId = 43L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 44L,
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 976, DateTimeKind.Utc).AddTicks(5934),
                            CreatedByUserId = 0L,
                            IsDeleted = false,
                            PermissionId = 44L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 45L,
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 976, DateTimeKind.Utc).AddTicks(5942),
                            CreatedByUserId = 0L,
                            IsDeleted = false,
                            PermissionId = 45L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 46L,
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 976, DateTimeKind.Utc).AddTicks(5943),
                            CreatedByUserId = 0L,
                            IsDeleted = false,
                            PermissionId = 46L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 47L,
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 976, DateTimeKind.Utc).AddTicks(5944),
                            CreatedByUserId = 0L,
                            IsDeleted = false,
                            PermissionId = 47L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 48L,
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 976, DateTimeKind.Utc).AddTicks(5945),
                            CreatedByUserId = 0L,
                            IsDeleted = false,
                            PermissionId = 48L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 49L,
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 976, DateTimeKind.Utc).AddTicks(5946),
                            CreatedByUserId = 0L,
                            IsDeleted = false,
                            PermissionId = 49L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 50L,
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 976, DateTimeKind.Utc).AddTicks(5947),
                            CreatedByUserId = 0L,
                            IsDeleted = false,
                            PermissionId = 50L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 51L,
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 976, DateTimeKind.Utc).AddTicks(5948),
                            CreatedByUserId = 0L,
                            IsDeleted = false,
                            PermissionId = 51L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 52L,
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 976, DateTimeKind.Utc).AddTicks(5949),
                            CreatedByUserId = 0L,
                            IsDeleted = false,
                            PermissionId = 52L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 53L,
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 976, DateTimeKind.Utc).AddTicks(5950),
                            CreatedByUserId = 0L,
                            IsDeleted = false,
                            PermissionId = 53L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 54L,
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 976, DateTimeKind.Utc).AddTicks(5951),
                            CreatedByUserId = 0L,
                            IsDeleted = false,
                            PermissionId = 54L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 55L,
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 976, DateTimeKind.Utc).AddTicks(5952),
                            CreatedByUserId = 0L,
                            IsDeleted = false,
                            PermissionId = 55L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 56L,
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 976, DateTimeKind.Utc).AddTicks(5953),
                            CreatedByUserId = 0L,
                            IsDeleted = false,
                            PermissionId = 56L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 57L,
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 976, DateTimeKind.Utc).AddTicks(5954),
                            CreatedByUserId = 0L,
                            IsDeleted = false,
                            PermissionId = 57L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 58L,
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 976, DateTimeKind.Utc).AddTicks(5955),
                            CreatedByUserId = 0L,
                            IsDeleted = false,
                            PermissionId = 58L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 59L,
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 976, DateTimeKind.Utc).AddTicks(5956),
                            CreatedByUserId = 0L,
                            IsDeleted = false,
                            PermissionId = 59L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 60L,
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 976, DateTimeKind.Utc).AddTicks(5958),
                            CreatedByUserId = 0L,
                            IsDeleted = false,
                            PermissionId = 60L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 61L,
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 976, DateTimeKind.Utc).AddTicks(5959),
                            CreatedByUserId = 0L,
                            IsDeleted = false,
                            PermissionId = 61L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 62L,
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 976, DateTimeKind.Utc).AddTicks(5960),
                            CreatedByUserId = 0L,
                            IsDeleted = false,
                            PermissionId = 62L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 63L,
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 976, DateTimeKind.Utc).AddTicks(5961),
                            CreatedByUserId = 0L,
                            IsDeleted = false,
                            PermissionId = 63L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 64L,
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 976, DateTimeKind.Utc).AddTicks(5962),
                            CreatedByUserId = 0L,
                            IsDeleted = false,
                            PermissionId = 64L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 65L,
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 976, DateTimeKind.Utc).AddTicks(5963),
                            CreatedByUserId = 0L,
                            IsDeleted = false,
                            PermissionId = 65L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 66L,
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 976, DateTimeKind.Utc).AddTicks(5964),
                            CreatedByUserId = 0L,
                            IsDeleted = false,
                            PermissionId = 66L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 67L,
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 976, DateTimeKind.Utc).AddTicks(5965),
                            CreatedByUserId = 0L,
                            IsDeleted = false,
                            PermissionId = 67L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 68L,
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 976, DateTimeKind.Utc).AddTicks(5966),
                            CreatedByUserId = 0L,
                            IsDeleted = false,
                            PermissionId = 68L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 69L,
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 976, DateTimeKind.Utc).AddTicks(5967),
                            CreatedByUserId = 0L,
                            IsDeleted = false,
                            PermissionId = 69L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 70L,
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 976, DateTimeKind.Utc).AddTicks(5968),
                            CreatedByUserId = 0L,
                            IsDeleted = false,
                            PermissionId = 70L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 71L,
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 976, DateTimeKind.Utc).AddTicks(5969),
                            CreatedByUserId = 0L,
                            IsDeleted = false,
                            PermissionId = 71L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 72L,
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 976, DateTimeKind.Utc).AddTicks(5970),
                            CreatedByUserId = 0L,
                            IsDeleted = false,
                            PermissionId = 72L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 73L,
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 976, DateTimeKind.Utc).AddTicks(5971),
                            CreatedByUserId = 0L,
                            IsDeleted = false,
                            PermissionId = 73L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 74L,
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 976, DateTimeKind.Utc).AddTicks(5972),
                            CreatedByUserId = 0L,
                            IsDeleted = false,
                            PermissionId = 74L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 75L,
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 976, DateTimeKind.Utc).AddTicks(5973),
                            CreatedByUserId = 0L,
                            IsDeleted = false,
                            PermissionId = 75L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 76L,
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 976, DateTimeKind.Utc).AddTicks(5974),
                            CreatedByUserId = 0L,
                            IsDeleted = false,
                            PermissionId = 76L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 77L,
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 976, DateTimeKind.Utc).AddTicks(5975),
                            CreatedByUserId = 0L,
                            IsDeleted = false,
                            PermissionId = 77L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 78L,
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 976, DateTimeKind.Utc).AddTicks(5976),
                            CreatedByUserId = 0L,
                            IsDeleted = false,
                            PermissionId = 78L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 79L,
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 976, DateTimeKind.Utc).AddTicks(5977),
                            CreatedByUserId = 0L,
                            IsDeleted = false,
                            PermissionId = 79L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 80L,
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 976, DateTimeKind.Utc).AddTicks(5980),
                            CreatedByUserId = 0L,
                            IsDeleted = false,
                            PermissionId = 80L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 81L,
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 976, DateTimeKind.Utc).AddTicks(5981),
                            CreatedByUserId = 0L,
                            IsDeleted = false,
                            PermissionId = 81L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 82L,
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 976, DateTimeKind.Utc).AddTicks(5982),
                            CreatedByUserId = 0L,
                            IsDeleted = false,
                            PermissionId = 82L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 83L,
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 976, DateTimeKind.Utc).AddTicks(5982),
                            CreatedByUserId = 0L,
                            IsDeleted = false,
                            PermissionId = 83L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 84L,
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 976, DateTimeKind.Utc).AddTicks(5983),
                            CreatedByUserId = 0L,
                            IsDeleted = false,
                            PermissionId = 84L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 86L,
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 976, DateTimeKind.Utc).AddTicks(5984),
                            CreatedByUserId = 0L,
                            IsDeleted = false,
                            PermissionId = 86L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 87L,
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 976, DateTimeKind.Utc).AddTicks(5985),
                            CreatedByUserId = 0L,
                            IsDeleted = false,
                            PermissionId = 87L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 88L,
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 976, DateTimeKind.Utc).AddTicks(5986),
                            CreatedByUserId = 0L,
                            IsDeleted = false,
                            PermissionId = 88L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 89L,
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 976, DateTimeKind.Utc).AddTicks(5987),
                            CreatedByUserId = 0L,
                            IsDeleted = false,
                            PermissionId = 89L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 90L,
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 976, DateTimeKind.Utc).AddTicks(5988),
                            CreatedByUserId = 0L,
                            IsDeleted = false,
                            PermissionId = 90L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 91L,
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 976, DateTimeKind.Utc).AddTicks(5989),
                            CreatedByUserId = 0L,
                            IsDeleted = false,
                            PermissionId = 91L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 92L,
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 976, DateTimeKind.Utc).AddTicks(5990),
                            CreatedByUserId = 0L,
                            IsDeleted = false,
                            PermissionId = 92L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 93L,
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 976, DateTimeKind.Utc).AddTicks(5991),
                            CreatedByUserId = 0L,
                            IsDeleted = false,
                            PermissionId = 93L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 94L,
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 976, DateTimeKind.Utc).AddTicks(5992),
                            CreatedByUserId = 0L,
                            IsDeleted = false,
                            PermissionId = 94L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 95L,
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 976, DateTimeKind.Utc).AddTicks(5993),
                            CreatedByUserId = 0L,
                            IsDeleted = false,
                            PermissionId = 95L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 96L,
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 976, DateTimeKind.Utc).AddTicks(5994),
                            CreatedByUserId = 0L,
                            IsDeleted = false,
                            PermissionId = 96L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 97L,
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 976, DateTimeKind.Utc).AddTicks(5995),
                            CreatedByUserId = 0L,
                            IsDeleted = false,
                            PermissionId = 97L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 98L,
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 976, DateTimeKind.Utc).AddTicks(5996),
                            CreatedByUserId = 0L,
                            IsDeleted = false,
                            PermissionId = 98L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 99L,
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 976, DateTimeKind.Utc).AddTicks(5997),
                            CreatedByUserId = 0L,
                            IsDeleted = false,
                            PermissionId = 99L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 100L,
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 976, DateTimeKind.Utc).AddTicks(5998),
                            CreatedByUserId = 0L,
                            IsDeleted = false,
                            PermissionId = 100L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 101L,
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 976, DateTimeKind.Utc).AddTicks(5999),
                            CreatedByUserId = 0L,
                            IsDeleted = false,
                            PermissionId = 101L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 102L,
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 976, DateTimeKind.Utc).AddTicks(6000),
                            CreatedByUserId = 0L,
                            IsDeleted = false,
                            PermissionId = 102L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 103L,
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 976, DateTimeKind.Utc).AddTicks(6006),
                            CreatedByUserId = 0L,
                            IsDeleted = false,
                            PermissionId = 103L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 104L,
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 976, DateTimeKind.Utc).AddTicks(6007),
                            CreatedByUserId = 0L,
                            IsDeleted = false,
                            PermissionId = 104L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 105L,
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 976, DateTimeKind.Utc).AddTicks(6008),
                            CreatedByUserId = 0L,
                            IsDeleted = false,
                            PermissionId = 105L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 106L,
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 976, DateTimeKind.Utc).AddTicks(6009),
                            CreatedByUserId = 0L,
                            IsDeleted = false,
                            PermissionId = 106L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 107L,
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 976, DateTimeKind.Utc).AddTicks(6011),
                            CreatedByUserId = 0L,
                            IsDeleted = false,
                            PermissionId = 107L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 108L,
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 976, DateTimeKind.Utc).AddTicks(6012),
                            CreatedByUserId = 0L,
                            IsDeleted = false,
                            PermissionId = 108L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 109L,
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 976, DateTimeKind.Utc).AddTicks(6013),
                            CreatedByUserId = 0L,
                            IsDeleted = false,
                            PermissionId = 109L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 110L,
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 976, DateTimeKind.Utc).AddTicks(6014),
                            CreatedByUserId = 0L,
                            IsDeleted = false,
                            PermissionId = 110L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 111L,
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 976, DateTimeKind.Utc).AddTicks(6015),
                            CreatedByUserId = 0L,
                            IsDeleted = false,
                            PermissionId = 111L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 112L,
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 976, DateTimeKind.Utc).AddTicks(6016),
                            CreatedByUserId = 0L,
                            IsDeleted = false,
                            PermissionId = 112L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 113L,
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 976, DateTimeKind.Utc).AddTicks(6017),
                            CreatedByUserId = 0L,
                            IsDeleted = false,
                            PermissionId = 113L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 114L,
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 976, DateTimeKind.Utc).AddTicks(6018),
                            CreatedByUserId = 0L,
                            IsDeleted = false,
                            PermissionId = 114L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 115L,
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 976, DateTimeKind.Utc).AddTicks(6019),
                            CreatedByUserId = 0L,
                            IsDeleted = false,
                            PermissionId = 115L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 116L,
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 976, DateTimeKind.Utc).AddTicks(6020),
                            CreatedByUserId = 0L,
                            IsDeleted = false,
                            PermissionId = 116L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 117L,
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 976, DateTimeKind.Utc).AddTicks(6020),
                            CreatedByUserId = 0L,
                            IsDeleted = false,
                            PermissionId = 117L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 118L,
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 976, DateTimeKind.Utc).AddTicks(6021),
                            CreatedByUserId = 0L,
                            IsDeleted = false,
                            PermissionId = 118L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 119L,
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 976, DateTimeKind.Utc).AddTicks(6022),
                            CreatedByUserId = 0L,
                            IsDeleted = false,
                            PermissionId = 119L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 120L,
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 976, DateTimeKind.Utc).AddTicks(6023),
                            CreatedByUserId = 0L,
                            IsDeleted = false,
                            PermissionId = 120L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 121L,
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 976, DateTimeKind.Utc).AddTicks(6024),
                            CreatedByUserId = 0L,
                            IsDeleted = false,
                            PermissionId = 121L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 122L,
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 976, DateTimeKind.Utc).AddTicks(6025),
                            CreatedByUserId = 0L,
                            IsDeleted = false,
                            PermissionId = 122L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 123L,
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 976, DateTimeKind.Utc).AddTicks(6026),
                            CreatedByUserId = 0L,
                            IsDeleted = false,
                            PermissionId = 123L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 124L,
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 976, DateTimeKind.Utc).AddTicks(6027),
                            CreatedByUserId = 0L,
                            IsDeleted = false,
                            PermissionId = 124L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 125L,
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 976, DateTimeKind.Utc).AddTicks(6028),
                            CreatedByUserId = 0L,
                            IsDeleted = false,
                            PermissionId = 125L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 126L,
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 976, DateTimeKind.Utc).AddTicks(6029),
                            CreatedByUserId = 0L,
                            IsDeleted = false,
                            PermissionId = 126L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 127L,
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 976, DateTimeKind.Utc).AddTicks(6030),
                            CreatedByUserId = 0L,
                            IsDeleted = false,
                            PermissionId = 127L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 128L,
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 976, DateTimeKind.Utc).AddTicks(6031),
                            CreatedByUserId = 0L,
                            IsDeleted = false,
                            PermissionId = 128L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 129L,
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 976, DateTimeKind.Utc).AddTicks(6032),
                            CreatedByUserId = 0L,
                            IsDeleted = false,
                            PermissionId = 129L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 130L,
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 25, 976, DateTimeKind.Utc).AddTicks(6033),
                            CreatedByUserId = 0L,
                            IsDeleted = false,
                            PermissionId = 130L,
                            RoleId = 1L
                        });
                });

            modelBuilder.Entity("Arcana.Domain.Entities.Users.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long>("CreatedByUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("DeletedByUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .HasColumnType("text");

                    b.Property<long>("RoleId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("UpdatedByUserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 26, 291, DateTimeKind.Utc).AddTicks(4732),
                            CreatedByUserId = 0L,
                            DateOfBirth = new DateTime(2001, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Email1@gmail.com",
                            FirstName = "FirstName1",
                            IsDeleted = false,
                            LastName = "LastName1",
                            Password = "$2a$12$ztRzpwiSNoy7THNO6ZmSJu/aHpfJwFfynndGlRmjGlKMxs2wYkmdW",
                            Phone = "+998991111111",
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 26, 598, DateTimeKind.Utc).AddTicks(4892),
                            CreatedByUserId = 0L,
                            DateOfBirth = new DateTime(2002, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Email2@gmail.com",
                            FirstName = "FirstName2",
                            IsDeleted = false,
                            LastName = "LastName2",
                            Password = "$2a$12$ViCHHEzIw5JY46RPfhupSew1lJjhb/Ek4KhtsNNXCCRySvgzfmNti",
                            Phone = "+998992222222",
                            RoleId = 2L
                        },
                        new
                        {
                            Id = 3L,
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 26, 986, DateTimeKind.Utc).AddTicks(6510),
                            CreatedByUserId = 0L,
                            DateOfBirth = new DateTime(2003, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Email3@gmail.com",
                            FirstName = "FirstName3",
                            IsDeleted = false,
                            LastName = "LastName3",
                            Password = "$2a$12$0bdRqrfNR7m/t1gaw7klze/h1SSgDYoaU7ToUOWQs/sQMnx3qizPe",
                            Phone = "+998993333333",
                            RoleId = 3L
                        });
                });

            modelBuilder.Entity("Arcana.Domain.Entities.Users.UserRole", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long>("CreatedByUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("DeletedByUserId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("UpdatedByUserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("UserRoles");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 26, 987, DateTimeKind.Utc).AddTicks(6264),
                            CreatedByUserId = 0L,
                            IsDeleted = false,
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 26, 987, DateTimeKind.Utc).AddTicks(6270),
                            CreatedByUserId = 0L,
                            IsDeleted = false,
                            Name = "Student"
                        },
                        new
                        {
                            Id = 3L,
                            CreatedAt = new DateTime(2024, 5, 15, 7, 58, 26, 987, DateTimeKind.Utc).AddTicks(6273),
                            CreatedByUserId = 0L,
                            IsDeleted = false,
                            Name = "Instructor"
                        });
                });

            modelBuilder.Entity("Arcana.Domain.Entities.CourseComments.CourseComment", b =>
                {
                    b.HasOne("Arcana.Domain.Entities.Courses.Course", "Course")
                        .WithMany("Comments")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Arcana.Domain.Entities.Students.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("Arcana.Domain.Entities.Courses.Course", b =>
                {
                    b.HasOne("Arcana.Domain.Entities.CourseCategories.CourseCategory", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Arcana.Domain.Entities.CourseCategories.CourseCategory", null)
                        .WithMany("Courses")
                        .HasForeignKey("CourseCategoryId");

                    b.HasOne("Arcana.Domain.Entities.Commons.Asset", "File")
                        .WithMany()
                        .HasForeignKey("FileId");

                    b.HasOne("Arcana.Domain.Entities.Instructors.Instructor", "Instructor")
                        .WithMany("Courses")
                        .HasForeignKey("InstructorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Arcana.Domain.Entities.Languages.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("File");

                    b.Navigation("Instructor");

                    b.Navigation("Language");
                });

            modelBuilder.Entity("Arcana.Domain.Entities.Courses.CourseModule", b =>
                {
                    b.HasOne("Arcana.Domain.Entities.Courses.Course", "Course")
                        .WithMany("Modules")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");
                });

            modelBuilder.Entity("Arcana.Domain.Entities.Courses.CourseStars", b =>
                {
                    b.HasOne("Arcana.Domain.Entities.Courses.Course", "Course")
                        .WithMany("Stars")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Arcana.Domain.Entities.Students.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("Arcana.Domain.Entities.Instructors.Instructor", b =>
                {
                    b.HasOne("Arcana.Domain.Entities.Users.User", "Detail")
                        .WithMany()
                        .HasForeignKey("DetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Arcana.Domain.Entities.Commons.Asset", "Picture")
                        .WithMany()
                        .HasForeignKey("PictureId");

                    b.Navigation("Detail");

                    b.Navigation("Picture");
                });

            modelBuilder.Entity("Arcana.Domain.Entities.Instructors.InstructorComment", b =>
                {
                    b.HasOne("Arcana.Domain.Entities.Instructors.Instructor", "Instructor")
                        .WithMany("Comments")
                        .HasForeignKey("InstructorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Arcana.Domain.Entities.Students.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Instructor");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("Arcana.Domain.Entities.Instructors.InstructorStar", b =>
                {
                    b.HasOne("Arcana.Domain.Entities.Instructors.Instructor", "Instructor")
                        .WithMany("Stars")
                        .HasForeignKey("InstructorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Arcana.Domain.Entities.Students.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Instructor");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("Arcana.Domain.Entities.Lessons.Lesson", b =>
                {
                    b.HasOne("Arcana.Domain.Entities.Commons.Asset", "File")
                        .WithMany()
                        .HasForeignKey("FileId");

                    b.HasOne("Arcana.Domain.Entities.Courses.CourseModule", "Module")
                        .WithMany("Lessons")
                        .HasForeignKey("ModuleId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("File");

                    b.Navigation("Module");
                });

            modelBuilder.Entity("Arcana.Domain.Entities.Lessons.LessonComment", b =>
                {
                    b.HasOne("Arcana.Domain.Entities.Lessons.Lesson", "Lesson")
                        .WithMany("Comments")
                        .HasForeignKey("LessonId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Arcana.Domain.Entities.Lessons.LessonComment", "Parent")
                        .WithMany()
                        .HasForeignKey("ParentId");

                    b.HasOne("Arcana.Domain.Entities.Users.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Lesson");

                    b.Navigation("Parent");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Arcana.Domain.Entities.QuestionAnswers.QuestionAnswer", b =>
                {
                    b.HasOne("Arcana.Domain.Entities.QuestionOptions.QuestionOption", "Option")
                        .WithMany()
                        .HasForeignKey("OptionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Arcana.Domain.Entities.Questions.Question", "Question")
                        .WithMany()
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Arcana.Domain.Entities.Quizzes.Quiz", "Quiz")
                        .WithMany()
                        .HasForeignKey("QuizId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Arcana.Domain.Entities.Students.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Option");

                    b.Navigation("Question");

                    b.Navigation("Quiz");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("Arcana.Domain.Entities.QuestionOptions.QuestionOption", b =>
                {
                    b.HasOne("Arcana.Domain.Entities.Questions.Question", "Question")
                        .WithMany("Options")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Question");
                });

            modelBuilder.Entity("Arcana.Domain.Entities.Questions.Question", b =>
                {
                    b.HasOne("Arcana.Domain.Entities.Commons.Asset", "File")
                        .WithMany()
                        .HasForeignKey("FileId");

                    b.HasOne("Arcana.Domain.Entities.Courses.CourseModule", "Module")
                        .WithMany()
                        .HasForeignKey("ModuleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("File");

                    b.Navigation("Module");
                });

            modelBuilder.Entity("Arcana.Domain.Entities.QuizApplications.QuizApplication", b =>
                {
                    b.HasOne("Arcana.Domain.Entities.Quizzes.Quiz", "Quiz")
                        .WithMany()
                        .HasForeignKey("QuizId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Arcana.Domain.Entities.Students.Student", "Student")
                        .WithMany("QuizApplications")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Quiz");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("Arcana.Domain.Entities.QuizQuestions.QuizQuestion", b =>
                {
                    b.HasOne("Arcana.Domain.Entities.Questions.Question", "Question")
                        .WithMany()
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Arcana.Domain.Entities.Quizzes.Quiz", "Quiz")
                        .WithMany()
                        .HasForeignKey("QuizId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Arcana.Domain.Entities.Quizzes.Quiz", null)
                        .WithMany("Questions")
                        .HasForeignKey("QuizId1");

                    b.Navigation("Question");

                    b.Navigation("Quiz");
                });

            modelBuilder.Entity("Arcana.Domain.Entities.Quizzes.Quiz", b =>
                {
                    b.HasOne("Arcana.Domain.Entities.Courses.CourseModule", "Module")
                        .WithMany()
                        .HasForeignKey("ModuleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Module");
                });

            modelBuilder.Entity("Arcana.Domain.Entities.StudentCourses.StudentCourse", b =>
                {
                    b.HasOne("Arcana.Domain.Entities.Courses.Course", "Course")
                        .WithMany()
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Arcana.Domain.Entities.Students.Student", "Student")
                        .WithMany("Courses")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("Arcana.Domain.Entities.Students.Student", b =>
                {
                    b.HasOne("Arcana.Domain.Entities.Users.User", "Detail")
                        .WithMany()
                        .HasForeignKey("DetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Arcana.Domain.Entities.Commons.Asset", "Picture")
                        .WithMany()
                        .HasForeignKey("PictureId");

                    b.Navigation("Detail");

                    b.Navigation("Picture");
                });

            modelBuilder.Entity("Arcana.Domain.Entities.Users.RolePermission", b =>
                {
                    b.HasOne("Arcana.Domain.Entities.Users.Permission", "Permission")
                        .WithMany()
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Arcana.Domain.Entities.Users.UserRole", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Permission");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Arcana.Domain.Entities.Users.User", b =>
                {
                    b.HasOne("Arcana.Domain.Entities.Users.UserRole", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Arcana.Domain.Entities.CourseCategories.CourseCategory", b =>
                {
                    b.Navigation("Courses");
                });

            modelBuilder.Entity("Arcana.Domain.Entities.Courses.Course", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Modules");

                    b.Navigation("Stars");
                });

            modelBuilder.Entity("Arcana.Domain.Entities.Courses.CourseModule", b =>
                {
                    b.Navigation("Lessons");
                });

            modelBuilder.Entity("Arcana.Domain.Entities.Instructors.Instructor", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Courses");

                    b.Navigation("Stars");
                });

            modelBuilder.Entity("Arcana.Domain.Entities.Lessons.Lesson", b =>
                {
                    b.Navigation("Comments");
                });

            modelBuilder.Entity("Arcana.Domain.Entities.Questions.Question", b =>
                {
                    b.Navigation("Options");
                });

            modelBuilder.Entity("Arcana.Domain.Entities.Quizzes.Quiz", b =>
                {
                    b.Navigation("Questions");
                });

            modelBuilder.Entity("Arcana.Domain.Entities.Students.Student", b =>
                {
                    b.Navigation("Courses");

                    b.Navigation("QuizApplications");
                });
#pragma warning restore 612, 618
        }
    }
}
